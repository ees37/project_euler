# Each new term in the Fibonacci sequence is generated by 
# adding the previous two terms. By starting with 1 and 2, 
# the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose 
# values do not exceed four million, find the sum of the 
# even-valued terms

# initialize
import time
start = time.time()
result = 0

# do work
def getEvenFibonacciSum(firstVal, secondVal, limit):
    global result
    # filter out odd numbers
    if not firstVal % 2:
        result = result + firstVal
    # base case
    if secondVal > limit:
        return
    else:
        getEvenFibonacciSum(secondVal, firstVal + secondVal, limit)	

getEvenFibonacciSum(1,2,4000000)

# show result
print(result)
totalMs = (time.time() - start) * 1000
print("solved in " + str(totalMs) + " ms")
